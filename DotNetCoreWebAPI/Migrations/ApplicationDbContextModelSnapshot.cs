// <auto-generated />
using DotNetCoreWebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNetCoreWebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DotNetCoreWebAPI.Model.Employee", b =>
                {
                    b.Property<int>("empid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("empid"));

                    b.Property<int>("Mid")
                        .HasColumnType("int");

                    b.Property<int?>("UserDetailsUserId")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("empname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("empsalary")
                        .HasColumnType("float");

                    b.HasKey("empid");

                    b.HasIndex("Mid");

                    b.HasIndex("UserDetailsUserId");

                    b.ToTable("employee");
                });

            modelBuilder.Entity("DotNetCoreWebAPI.Model.Manager", b =>
                {
                    b.Property<int>("Mid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Mid"));

                    b.Property<string>("Mname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserDetailsUserId")
                        .HasColumnType("int");

                    b.HasKey("Mid");

                    b.HasIndex("UserDetailsUserId");

                    b.ToTable("manager");
                });

            modelBuilder.Entity("DotNetCoreWebAPI.Model.UserDetails", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("DotNetCoreWebAPI.Model.Employee", b =>
                {
                    b.HasOne("DotNetCoreWebAPI.Model.Manager", "Manager")
                        .WithMany("emps")
                        .HasForeignKey("Mid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DotNetCoreWebAPI.Model.UserDetails", null)
                        .WithMany("employees")
                        .HasForeignKey("UserDetailsUserId");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("DotNetCoreWebAPI.Model.Manager", b =>
                {
                    b.HasOne("DotNetCoreWebAPI.Model.UserDetails", null)
                        .WithMany("managers")
                        .HasForeignKey("UserDetailsUserId");
                });

            modelBuilder.Entity("DotNetCoreWebAPI.Model.Manager", b =>
                {
                    b.Navigation("emps");
                });

            modelBuilder.Entity("DotNetCoreWebAPI.Model.UserDetails", b =>
                {
                    b.Navigation("employees");

                    b.Navigation("managers");
                });
#pragma warning restore 612, 618
        }
    }
}
